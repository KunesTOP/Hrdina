// Generated by view binder compiler. Do not edit!
package com.example.hrdina.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;

import com.example.hrdina.R;


public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier3;

  @NonNull
  public final Button exitBtn;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final Button newGameBtn;

  @NonNull
  public final Button resultsBtn;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier3,
      @NonNull Button exitBtn, @NonNull ImageView imageView, @NonNull Button newGameBtn,
      @NonNull Button resultsBtn) {
    this.rootView = rootView;
    this.barrier3 = barrier3;
    this.exitBtn = exitBtn;
    this.imageView = imageView;
    this.newGameBtn = newGameBtn;
    this.resultsBtn = resultsBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier3;
      Barrier barrier3 = ViewBindings.findChildViewById(rootView, id);
      if (barrier3 == null) {
        break missingId;
      }

      id = R.id.exitBtn;
      Button exitBtn = ViewBindings.findChildViewById(rootView, id);
      if (exitBtn == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.newGameBtn;
      Button newGameBtn = ViewBindings.findChildViewById(rootView, id);
      if (newGameBtn == null) {
        break missingId;
      }

      id = R.id.resultsBtn;
      Button resultsBtn = ViewBindings.findChildViewById(rootView, id);
      if (resultsBtn == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, barrier3, exitBtn, imageView,
          newGameBtn, resultsBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
